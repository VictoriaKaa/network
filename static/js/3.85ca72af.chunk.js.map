{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","message","user","className","classes","right","left","messageItem","DialogItem","path","id","dialog","to","activeClassName","active","name","AddMessageFormRedux","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","messageForm","Field","component","Textarea","placeholder","addField","btn","Dialogs","dialogsElements","dialogsPage","dialogsData","map","el","messagesElements","messages","dialogs","formBlock","values","onAddMessage","newMessageBody","dialogsItems","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,YAAc,6BAA6B,SAAW,0BAA0B,IAAM,uB,oBCA7ND,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,MAAQ,8CAA8C,KAAO,+C,oBCA7JD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,yGCoBhDC,EAhBC,SAACC,GACb,IAAIC,EAAU,KAOd,OALIA,EADc,UAAfD,EAAME,KACM,yBAAKC,UAAWC,IAAQC,OAAQL,EAAMC,SAGtC,yBAAKE,UAAWC,IAAQE,MAAON,EAAMC,SAGhD,yBAAKE,UAAWC,IAAQG,aAEnBN,I,0BCFEO,EAVI,SAACR,GAChB,IAAIS,EAAO,YAAcT,EAAMU,GAC/B,OACI,yBAAKP,UAAWC,IAAQO,QACpB,kBAAC,IAAD,CAASC,GAAIH,EAAMI,gBAAiBT,IAAQU,QAASd,EAAMe,Q,kCCyCjEC,GAfYC,YAAiB,IAePC,YAAU,CAAEC,KAAM,wBAAlBD,EAbL,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,aAAclB,UAAWC,IAAQkB,aACnD,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdV,KAAK,iBAAiBW,YAAY,qBAAqBvB,UAAWC,IAAQuB,WAC9E,6BACI,4BAAQxB,UAAWC,IAAQwB,KAA3B,cASDC,EAxCC,SAAC7B,GACb,IAAI8B,EAAkB9B,EAAM+B,YAAYC,YAAYC,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,CAAYnB,KAAMmB,EAAGnB,KAAML,GAAIwB,EAAGxB,QAC/FyB,EAAmBnC,EAAM+B,YAAYK,SAASH,KAAI,SAACC,GAAD,OAAQ,kBAAC,EAAD,CAASjC,QAASiC,EAAGjC,QAASC,KAAMgC,EAAGhC,UAMrG,OACI,yBAAKC,UAAWC,IAAQiC,SACpB,yBAAKlC,UAAWC,IAAQgC,UACnBD,EACD,yBAAKhC,UAAWC,IAAQkC,WACpB,kBAACtB,EAAD,CAAqBI,SATjB,SAACmB,GACjBvC,EAAMwC,aAAaD,EAAOE,qBAWtB,yBAAKtC,UAAWC,IAAQsC,cACnBZ,K,sBCJFa,sBAAQC,aAlBD,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,gBAGF,SAACe,GAEtB,MAAO,CACHN,aAAc,SAACC,GAAqBK,EAASC,YAAwBN,SAW7CO,IADjBL,CACmCd","file":"static/js/3.85ca72af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs___NaCT\",\"dialogsItems\":\"Dialogs_dialogsItems__2jHms\",\"messages\":\"Dialogs_messages__1ERIg\",\"messageForm\":\"Dialogs_messageForm__1IlzG\",\"addField\":\"Dialogs_addField__1srQ4\",\"btn\":\"Dialogs_btn__1Fhbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageItem\":\"Message_messageItem__1rnJn\",\"message\":\"Message_message__298XR\",\"right\":\"Message_right__2I5ib Message_message__298XR\",\"left\":\"Message_left__2S_cE Message_message__298XR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__pCaf8\",\"active\":\"DialogItem_active__2XePp\"};","import React from 'react';\r\nimport classes from './Message.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) => {\r\n    let message = null;\r\n    if(props.user === \"user1\"){\r\n        message = (<div className={classes.right}>{props.message}</div>)\r\n    }\r\n    else {\r\n        message = (<div className={classes.left}>{props.message}</div>)\r\n    }\r\n    return (\r\n        <div className={classes.messageItem}>\r\n            {/* <div className={classes.user}>{props.user}</div> */}\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './DialogItem.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport Message from './Message/Message';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport { Field, reduxForm } from 'redux-form';\r\n// для addmessage\r\nimport { required, maxLengthCreator } from '../../utils/validator/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogsData.map((el) => (<DialogItem name={el.name} id={el.id} />))\r\n    let messagesElements = props.dialogsPage.messages.map((el) => <Message message={el.message} user={el.user} />)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onAddMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <div className={classes.formBlock}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes.messageForm}>\r\n            <Field component={Textarea}\r\n                name=\"newMessageBody\" placeholder=\"Enter your message\" className={classes.addField} />\r\n            <div>\r\n                <button className={classes.btn}>Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;","import { addMessageActionCreator } from \"../../redux/dialogs-reducer\"\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        onAddMessage: (newMessageBody) => { dispatch(addMessageActionCreator(newMessageBody)) }\r\n    }\r\n }\r\n// compose(connect(mapStateToProps,mapDispatchToProps),\r\n//     withAuthRedirect)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps),\r\n                                withAuthRedirect)(Dialogs);\r\n\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//         {\r\n//             (store) => {\r\n\r\n//                 let state = store.getState();\r\n\r\n//                 let onAddMessage = () => {\r\n//                     store.dispatch(addMessageActionCreator());\r\n//                 };\r\n\r\n//                 let onMessageChange = (text) => {\r\n//                     store.dispatch(updateNewMessageTextActionCreator(text));\r\n//                 }\r\n//                 return <Dialogs dialogsData={state.dialogsPage.dialogsData}\r\n//                     messages={state.dialogsPage.messages}\r\n//                     newMessageText={state.dialogsPage.newMessageText}\r\n//                     onAddMessage={onAddMessage}\r\n//                     onMessageChange={onMessageChange}\r\n//                 />\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }"],"sourceRoot":""}